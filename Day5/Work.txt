using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace UnderstandingOOPSApplication
{
    internal class Program
    {
        int iInstanceNum1 = 0;
        static int iStaticNum1 = 0;

        void Increment()
        {
            iInstanceNum1++;
            iStaticNum1++;
        }
        void PrintValues()
        {
            Console.WriteLine("The value of instance num1 is {0}", iInstanceNum1);
            Console.WriteLine("The value of static num1 is {0}", iStaticNum1);
        }
        static void Main(string[] args)
        {
            Program p1 = new Program();
            Program p2 = new Program();
            Console.WriteLine("Values before increment");
            Console.WriteLine("P1");
            p1.PrintValues();
            Console.WriteLine("P2");
            p2.PrintValues();
            p1.Increment();
            Console.WriteLine("Values After increment");
            Console.WriteLine("P1");
            p1.PrintValues();
            p2.Increment();
            Console.WriteLine("P2");
            p2.PrintValues();
            Console.ReadLine();
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace UnderstandingOOPSApplication
{
    internal class Program
    {
        
        static void Main(string[] args)
        {
           Customer customer = new Customer();
            customer.Phone = "9876543210";
            Console.WriteLine("Customer Phone "+customer.Phone);
            Console.ReadLine();
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace UnderstandingOOPSApplication
{
    internal class Customer
    {
        public int Id { get; set; }
        public string Name { get; set; }
        string phone;

        public string Phone { 
            get
            {
                string masked = "XXXXXX"+phone.Substring(6, 4);
                return masked;
            }
            set { 
                phone = value;
            } }
    }
}

 private int checkPrivate;
        protected int checkProtected;
        internal int checkInternal;
        protected internal int checkProtectedInternal;
        protected private int checkProtectedPrivate;
